oob.error.oldForest9 <- data.frame(
Trees=rep(1:nrow(oldForest9$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest9$err.rate)),
Error=c(oldForest9$err.rate[,"OOB"],
oldForest9$err.rate[,"1"],
oldForest9$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood9 <- data.frame(
Trees=rep(1:nrow(mirkwood9$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood9$err.rate)),
Error=c(mirkwood9$err.rate[,"OOB"],
mirkwood9$err.rate[,"1"],
mirkwood9$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn9<- data.frame(
Trees=rep(1:nrow(fangorn9$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn9$err.rate)),
Error=c(fangorn9$err.rate[,"OOB"],
fangorn9$err.rate[,"1"],
fangorn9$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest9, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood9, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn9, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree905, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree910, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree920, mtry=i, ntree=1500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
set.seed(25000)
#BAROOM dont be hasty now
#assuming that 0.32 is the lowest
oldForest8 <- randomForest( drug∼.,data=tree905  ,mtry=10,ntree=500)
oldForest8
#assuming that 0.32 is the lowest
mirkwood8 <- randomForest( drug∼.,data=tree910  ,mtry=9,ntree=1000)
mirkwood8
#assuming that 0.28 is the lowest
fangorn8 <- randomForest( drug∼.,data=tree920  ,mtry=4,ntree=1500)
#straping the first column of the truth set to the tree
tree920<-cbind(drug=truth_set[,9],root20)
tree920<-clean_names(tree920)
tree920$drug<-factor(tree920$drug)
tree910<-cbind(drug=truth_set[,9],root10)
tree910<-clean_names(tree910)
tree910$drug<-factor(tree910$drug)
tree905<-cbind(drug=truth_set[,9],root5)
tree905<-clean_names(tree905)
tree905$drug<-factor(tree905$drug)
set.seed(25000)
#BAROOM dont be hasty now
oldForest9 <- randomForest( drug∼.,data=tree905  ,mtry=3,ntree=500)
oldForest9
mirkwood9<- randomForest( drug∼.,data=tree910  ,mtry=3,ntree=1000)
mirkwood9
fangorn9 <- randomForest( drug∼.,data=tree920  ,mtry=3,ntree=1500)
fangorn9
set.seed(25000)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(randomForest)
library(parallel)
library(skimr)
library(broom)
library(janitor)
library(dplyr)
library(readr)
library(genefilter)
#library(parLapply)
# Read in the cleaned expression data
expression <- as.data.frame((read.table("../data/clean_expression.txt", row.names=1 )))
rownames(expression)[1] <- '184A1'# Rename the only integer name
# Read in the subtype data
subtypes <- read_tsv("../data/clean_subtypes.txt")
# Read in the truth set
truth_set <-  as.data.frame((read.table("../data/clean_training_answers.txt", row.names=1 )))
# Create merged feature set
featureSet<-cbind(subtypes[,2],t(expression))
expVar <- (rowVars(expression))
hist(expVar)
expVar <- as.data.frame(expVar)
names(expVar) <- c('variance')
paste('max variance:', max(expVar[,1]))
paste('min variance:', min(expVar[,1]))
#top 20 of genes
expVar %>% count((variance > '0.5'))
top20 <- expVar$variance > 0.5
root20 <- expression[top20,]
root20<-data.frame(t(root20))
dim(root20)
#top 10% of genes
expVar %>% count((variance > '1'))
top10 <- expVar$variance > 1
root10 <- expression[top10,]
root10<-data.frame(t(root10))
dim(root10)
#top 5% of genes
expVar %>% count((variance > '1.5'))
top5 <- expVar$variance > 1.5
root5 <- expression[top5,]
root5<-data.frame(t(root5))
dim(root5)
#straping the first column of the truth set to the tree
tree1020<-cbind(drug=truth_set[,10],root20)
tree1020<-clean_names(tree1020)
tree1020$drug<-factor(tree1020$drug)
tree1010<-cbind(drug=truth_set[,10],root10)
tree1010<-clean_names(tree1010)
tree1010$drug<-factor(tree1010$drug)
tree1005<-cbind(drug=truth_set[,10],root5)
tree1005<-clean_names(tree1005)
tree1005$drug<-factor(tree1005$drug)
set.seed(25000)
#BAROOM dont be hasty now
oldForest10 <- randomForest( drug∼.,data=tree1005  ,mtry=3,ntree=500)
oldForest10
mirkwood10<- randomForest( drug∼.,data=tree1010  ,mtry=3,ntree=500)
mirkwood10
fangorn10 <- randomForest( drug∼.,data=tree1020  ,mtry=3,ntree=500)
fangorn10
#straping the first column of the truth set to the tree
tree1020<-cbind(drug=truth_set[,10],root20)
tree1020<-clean_names(tree1020)
tree1020$drug<-factor(tree1020$drug)
tree1010<-cbind(drug=truth_set[,10],root10)
tree1010<-clean_names(tree1010)
tree1010$drug<-factor(tree1010$drug)
tree1005<-cbind(drug=truth_set[,10],root5)
tree1005<-clean_names(tree1005)
tree1005$drug<-factor(tree1005$drug)
set.seed(25000)
#BAROOM dont be hasty now
oldForest10 <- randomForest( drug∼.,data=tree1005  ,mtry=3,ntree=500)
oldForest10
mirkwood10<- randomForest( drug∼.,data=tree1010  ,mtry=3,ntree=500)
mirkwood10
fangorn10 <- randomForest( drug∼.,data=tree1020  ,mtry=3,ntree=500)
fangorn10
#tree optimization for 5% tree
oob.error.oldForest10 <- data.frame(
Trees=rep(1:nrow(oldForest10$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest10$err.rate)),
Error=c(oldForest10$err.rate[,"OOB"],
oldForest10$err.rate[,"1"],
oldForest10$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood10 <- data.frame(
Trees=rep(1:nrow(mirkwood10$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood10$err.rate)),
Error=c(mirkwood10$err.rate[,"OOB"],
mirkwood10$err.rate[,"1"],
mirkwood10$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn10<- data.frame(
Trees=rep(1:nrow(fangorn10$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn10$err.rate)),
Error=c(fangorn10$err.rate[,"OOB"],
fangorn10$err.rate[,"1"],
fangorn10$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest10, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood10, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn10, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1005, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1010, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1020, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
set.seed(25000)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(randomForest)
library(parallel)
library(skimr)
library(broom)
library(janitor)
library(dplyr)
library(readr)
library(genefilter)
#library(parLapply)
# Read in the cleaned expression data
expression <- as.data.frame((read.table("../data/clean_expression.txt", row.names=1 )))
rownames(expression)[1] <- '184A1'# Rename the only integer name
# Read in the subtype data
subtypes <- read_tsv("../data/clean_subtypes.txt")
# Read in the truth set
truth_set <-  as.data.frame((read.table("../data/clean_training_answers.txt", row.names=1 )))
# Create merged feature set
featureSet<-cbind(subtypes[,2],t(expression))
expVar <- (rowVars(expression))
hist(expVar)
expVar <- as.data.frame(expVar)
names(expVar) <- c('variance')
paste('max variance:', max(expVar[,1]))
paste('min variance:', min(expVar[,1]))
#top 20 of genes
expVar %>% count((variance > '0.5'))
top20 <- expVar$variance > 0.5
root20 <- expression[top20,]
root20<-data.frame(t(root20))
dim(root20)
#top 10% of genes
expVar %>% count((variance > '1'))
top10 <- expVar$variance > 1
root10 <- expression[top10,]
root10<-data.frame(t(root10))
dim(root10)
#top 5% of genes
expVar %>% count((variance > '1.5'))
top5 <- expVar$variance > 1.5
root5 <- expression[top5,]
root5<-data.frame(t(root5))
dim(root5)
#straping the first column of the truth set to the tree
tree1120<-cbind(drug=truth_set[,11],root20)
tree1120<-clean_names(tree1120)
tree1120$drug<-factor(tree1120$drug)
tree1110<-cbind(drug=truth_set[,11],root10)
tree1110<-clean_names(tree1110)
tree1110$drug<-factor(tree1110$drug)
tree1105<-cbind(drug=truth_set[,11],root5)
tree1105<-clean_names(tree1105)
tree1105$drug<-factor(tree1105$drug)
set.seed(25000)
#BAROOM dont be hasty now
oldForest11 <- randomForest( drug∼.,data=tree1105  ,mtry=3,ntree=500)
oldForest11
mirkwood11<- randomForest( drug∼.,data=tree1110  ,mtry=3,ntree=500)
mirkwood11
fangorn11 <- randomForest( drug∼.,data=tree1120  ,mtry=3,ntree=500)
fangorn11
#tree optimization for 5% tree
oob.error.oldForest11 <- data.frame(
Trees=rep(1:nrow(oldForest11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest11$err.rate)),
Error=c(oldForest11$err.rate[,"OOB"],
oldForest11$err.rate[,"1"],
oldForest11$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood11 <- data.frame(
Trees=rep(1:nrow(mirkwood11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood11$err.rate)),
Error=c(mirkwood11$err.rate[,"OOB"],
mirkwood11$err.rate[,"1"],
mirkwood11$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn11<- data.frame(
Trees=rep(1:nrow(fangorn11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn11$err.rate)),
Error=c(fangorn11$err.rate[,"OOB"],
fangorn11$err.rate[,"1"],
fangorn11$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#BAROOM dont be hasty now
oldForest11 <- randomForest( drug∼.,data=tree1105  ,mtry=3,ntree=500)
oldForest11
mirkwood11<- randomForest( drug∼.,data=tree1110  ,mtry=3,ntree=1000)
mirkwood11
fangorn11 <- randomForest( drug∼.,data=tree1120  ,mtry=3,ntree=500)
fangorn11
#tree optimization for 5% tree
oob.error.oldForest11 <- data.frame(
Trees=rep(1:nrow(oldForest11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest11$err.rate)),
Error=c(oldForest11$err.rate[,"OOB"],
oldForest11$err.rate[,"1"],
oldForest11$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood11 <- data.frame(
Trees=rep(1:nrow(mirkwood11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood11$err.rate)),
Error=c(mirkwood11$err.rate[,"OOB"],
mirkwood11$err.rate[,"1"],
mirkwood11$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn11<- data.frame(
Trees=rep(1:nrow(fangorn11$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn11$err.rate)),
Error=c(fangorn11$err.rate[,"OOB"],
fangorn11$err.rate[,"1"],
fangorn11$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn11, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1005, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1105, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1110, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1120, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
set.seed(25000)
#BAROOM dont be hasty now
#assuming that 0.44 is the lowest
oldForest11 <- randomForest( drug∼.,data=tree1105  ,mtry=2,ntree=500)
oldForest11
#assuming that 0.44 is the lowest
mirkwood11 <- randomForest( drug∼.,data=tree1110  ,mtry=3,ntree=1000)
mirkwood11
#assuming that 0.40 is the lowest
fangorn11 <- randomForest( drug∼.,data=tree1120  ,mtry=6,ntree=500)
fangorn11
#straping the first column of the truth set to the tree
tree1220<-cbind(drug=truth_set[,12],root20)
tree1220<-clean_names(tree1220)
tree1220$drug<-factor(tree1220$drug)
tree1210<-cbind(drug=truth_set[,12],root10)
tree1210<-clean_names(tree1210)
tree1210$drug<-factor(tree1210$drug)
tree1205<-cbind(drug=truth_set[,12],root5)
tree1205<-clean_names(tree1205)
tree1205$drug<-factor(tree1205$drug)
set.seed(25000)
#BAROOM dont be hasty now
oldForest12 <- randomForest( drug∼.,data=tree1205  ,mtry=3,ntree=500)
oldForest12
mirkwood12<- randomForest( drug∼.,data=tree1210  ,mtry=3,ntree=500)
mirkwood12
fangorn12 <- randomForest( drug∼.,data=tree1220  ,mtry=3,ntree=500)
fangorn12
#tree optimization for 5% tree
oob.error.oldForest12 <- data.frame(
Trees=rep(1:nrow(oldForest12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest12$err.rate)),
Error=c(oldForest12$err.rate[,"OOB"],
oldForest12$err.rate[,"1"],
oldForest12$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood12 <- data.frame(
Trees=rep(1:nrow(mirkwood12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood12$err.rate)),
Error=c(mirkwood12$err.rate[,"OOB"],
mirkwood12$err.rate[,"1"],
mirkwood12$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn12<- data.frame(
Trees=rep(1:nrow(fangorn12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn12$err.rate)),
Error=c(fangorn12$err.rate[,"OOB"],
fangorn12$err.rate[,"1"],
fangorn12$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#BAROOM dont be hasty now
oldForest12 <- randomForest( drug∼.,data=tree1205  ,mtry=3,ntree=500)
oldForest12
mirkwood12<- randomForest( drug∼.,data=tree1210  ,mtry=3,ntree=1000)
mirkwood12
fangorn12 <- randomForest( drug∼.,data=tree1220  ,mtry=3,ntree=1000)
fangorn12
#tree optimization for 5% tree
oob.error.oldForest12 <- data.frame(
Trees=rep(1:nrow(oldForest12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(oldForest12$err.rate)),
Error=c(oldForest12$err.rate[,"OOB"],
oldForest12$err.rate[,"1"],
oldForest12$err.rate[,"0"]))
#tree optimization for 10% tree
oob.error.mirkwood12 <- data.frame(
Trees=rep(1:nrow(mirkwood12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(mirkwood12$err.rate)),
Error=c(mirkwood12$err.rate[,"OOB"],
mirkwood12$err.rate[,"1"],
mirkwood12$err.rate[,"0"]))
#tree optimization for 20% tree
oob.error.fangorn12<- data.frame(
Trees=rep(1:nrow(fangorn12$err.rate), times=3),
Type=rep(c("OOB", "1", "0"), each=nrow(fangorn12$err.rate)),
Error=c(fangorn12$err.rate[,"OOB"],
fangorn12$err.rate[,"1"],
fangorn12$err.rate[,"0"]))
#tree optimization plot for 5% tree
ggplot(data=oob.error.oldForest12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 5% variance")
#tree optimization plot for 10% tree
ggplot(data=oob.error.mirkwood12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 10% variance")
#tree optimization for 20% tree
ggplot(data=oob.error.fangorn12, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))+ggtitle("forest of 20% variance")
set.seed(25000)
#BAROOM dont be hasty now
oldForest12 <- randomForest( drug∼.,data=tree1205  ,mtry=3,ntree=750)
oldForest12
mirkwood12<- randomForest( drug∼.,data=tree1210  ,mtry=3,ntree=750)
mirkwood12
fangorn12 <- randomForest( drug∼.,data=tree1220  ,mtry=3,ntree=750)
fangorn12
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1105, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1110, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1120, mtry=i, ntree=500)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
set.seed(25000)
#split optimization
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1205, mtry=i, ntree=750)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1210, mtry=i, ntree=750)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
oob.values <- vector(length=20)
for(i in 1:20) {
temp.model <- randomForest(drug ~ ., data=tree1220, mtry=i, ntree=750)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
oob.values
